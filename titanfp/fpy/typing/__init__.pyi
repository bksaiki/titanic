from abc import ABC
from typing import Callable

_Real = Real | int | float

class Real(ABC):
    def __set__(self, other: _Real) -> Real: ...

    def __add__(self: Real, other: _Real) -> Real: ...
    def __sub__(self: Real, other: _Real) -> Real: ...
    def __mul__(self: Real, other: _Real) -> Real: ...
    def __truediv__(self: Real, other: _Real) -> Real: ...

    def __radd__(self: Real, other: _Real) -> Real: ...
    def __rsub__(self: Real, other: _Real) -> Real: ...
    def __rmul__(self: Real, other: _Real) -> Real: ...
    def __rtruediv__(self: Real, other: _Real) -> Real: ...

    def __pow__(self: Real, other: int) -> Real: ...

    def __eq__(self: Real, other) -> bool: ...
    def __ne__(self: Real, other) -> bool: ...
    def __lt__(self: Real, other: _Real) -> bool: ...
    def __le__(self: Real, other: _Real) -> bool: ...
    def __gt__(self: Real, other: _Real) -> bool: ...
    def __ge__(self: Real, other: _Real) -> bool: ...


def fabs(x: _Real) -> Real: ...
def sqrt(x: _Real) -> Real: ...
def sin(x: _Real) -> Real: ...
def cos(x: _Real) -> Real: ...
def tan(x: _Real) -> Real: ...
def atan(x: _Real) -> Real: ...

def digits(m: int, e: int, b: int) -> Real: ...
